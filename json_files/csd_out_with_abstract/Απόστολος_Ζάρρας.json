[{
    "name": "\u0391\u03c0\u03cc\u03c3\u03c4\u03bf\u03bb\u03bf\u03c2 \u0396\u03ac\u03c1\u03c1\u03b1\u03c2",
    "romanize name": "Apostolos Zarras",
    "School-Department": "\u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd & \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2",
    "University": "uoi",
    "Rank": "\u0391\u03bd\u03b1\u03c0\u03bb\u03b7\u03c1\u03c9\u03c4\u03ae\u03c2 \u039a\u03b1\u03b8\u03b7\u03b3\u03b7\u03c4\u03ae\u03c2",
    "Apella_id": 1150,
    "Scholar name": "Apostolos Zarras",
    "Scholar id": "9nXN6XYAAAAJ",
    "Affiliation": "Department of Computer Science & Engineering - University of Ioannina",
    "Citedby": 1461,
    "Interests": [
        "Software Engineering"
    ],
    "Scholar url": "https://scholar.google.com/citations?user=9nXN6XYAAAAJ&hl=en",
    "Publications": [
        {
            "Title": "CHOReOS Middleware Specification (D3. 1)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00664253/",
            "Abstract": "This deliverable specifies the main concepts of the CHOReOS middleware architecture. Starting from the Future Internet (FI) challenges for scalability, heterogeneity, mobility, awareness, and adaptation that have been investigated in prior work done in WP1, we introduce the aforementioned concepts to deal with the requirements derived from the FI challenges. In particular, we propose an extensible and scalable service discovery approach for the organization and discovery of services that relies on multiple service discovery protocols. Moreover, we introduce an extensible and scalable approach, based on the service bus paradigm, for service access that features the integration and adaptation of multiple interaction protocols. Furthermore, we propose solutions that enable the execution of FI service compositions that range from compositions of choreographed services, developed according to the CHOReOS development process, to massive compositions of things. Finally, we detail the Cloud & Grid middleware facilities that support the overall middleware and the choreographies that are built on it, via a unified API that provides access to multiple cloud infrastructures (e.g., Amazon EC2, HP Open Cirrus, private clouds).",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:k_IJM867U9cC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Engineering reconfigurable distributed software systems: Issues arising for pervasive computing",
            "Publication year": 2006,
            "Publication url": "https://link.springer.com/chapter/10.1007/11916246_19",
            "Abstract": "This chapter establishes a common base for discussing reconfigurability in distributed software systems in general and in pervasive systems in particular, by introducing a generic reconfiguration cycle. Following this cycle, we discuss in detail three former efforts on reconfigurable pervasive systems, and draw conclusions about the capacity of existing approaches to deal with open, dynamic, ad hoc environments. We, then, outline our approach towards uncontrolled reconfiguration targeting environments in which no centralized coordination or prior awareness between services being composed is assumed. Our solution supports awareness of service semantics and related service discovery, configuration change detection and state transfer, interface-aware dynamic adaptation of service orchestrations and conversation-aware checkpointing and recovery.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:ZeXyd9-uunAC",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Context aware query processing in Ad-Hoc environments of peers",
            "Publication year": 2008,
            "Publication url": "https://olympias.lib.uoi.gr/jspui/bitstream/123456789/10996/1/Vassiliadis-2008-Context-Aware%20Query%20Processing%20in%20Ad-Hoc%20Environments%20of.pdf",
            "Abstract": "In this paper, we deal with context-aware query processing in ad-hoc peer-to-peer networks. Each peer in such an environment has a database over which users want to execute queries. This database involves (a) relations which are locally stored and (b) relations which are virtual or hybrid. In the case of virtual relations, all the tuples of the relation are collected from peers that are present in the network at the time when the query is posed. Hybrid relations involve both locally stored tuples and tuples collected from the network. The collaboration among peers is performed through web services. The integration of the external data, before they are locally collected to a peer's database is performed through a workflow of web service invocations. Summarizing the problem, due to the transitive nature of the extent of virtual relations, we cannot perform query processing in the traditional way, but rather, we have to involve contextaware query processing techniques that exploit the neighborhood of each peer and the web service infrastructure that deals with the heterogeneity of peers. To deal with the aforementioned problem we provide the following contributions. First, we formally define the system model. Next, we define SQLP, an extension of traditional SQL on the basis of contextual environment requirements that concern the termination of queries, the failure of individual peers and the semantic characteristics of the peers of the network. In addition, we precisely define the semantics of SQLP. We discuss issues of data integration, performed through workflows of web services. Moreover, we present a query execution algorithm as well as the formal \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:70eg2SAEIzsC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Gravitating to rigidity: Patterns of schema evolution\u2013and its absence\u2013in the lives of tables",
            "Publication year": 2017,
            "Publication url": "https://www.sciencedirect.com/science/article/pii/S030643791630120X",
            "Abstract": "Like all software maintenance, schema evolution is a process that can severely impact the lifecycle of a data-intensive software projects, as schema updates can drive depending applications crushing or delivering incorrect data to end users. In this paper, we study the schema evolution of eight databases that are part of larger open source projects, publicly available through open source repositories. In particular, the focus of our research was the understanding of which tables evolve and how. We report on our observations and patterns on how evolution related properties, like the possibility of deletion, or the amount of updates that a table undergoes, are related to observable table properties like the number of attributes or the time of birth of a table.A study of the update profile of tables, indicates that they are mostly rigid (without any updates to their schema at all) or quiet (with few updates), especially in databases \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:ZHo1McVdvXMC",
            "Publisher": "Pergamon"
        },
        {
            "Title": "Specification of the CHOReOS IDRE (D5. 2)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00664305/",
            "Abstract": "This deliverable focuses on the design of the CHOReOS Integrated Development and Runtime Environment, aka CHOReOS IDRE, based on the supporting solutions developed within WP2, WP3 and WP4 during CHOReOS' 1st year. The document provides an overall description of the IDRE components, their respective functionalities and the integration dependencies between them, thereby defining the integration points between the components developed in WP2-3-4.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:TFP_iSt0sucC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Systematic aid for Developing Middleware Architecture",
            "Publication year": 2002,
            "Publication url": "Unknown",
            "Abstract": "Unknown",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:7PzlFSSx8tAC",
            "Publisher": "Association for Computing Machinery, ACM"
        },
        {
            "Title": "CHOReOS dynamic development model definition (D2. 1)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00664236/",
            "Abstract": "The Future Internet envisions a ubiquitous world where available services can be easily discovered and coordinated so as to fit users needs. Service choreographies will play a central role in this vision as an effective means to allow heterogeneous services to suitably collaborate. This deliverable defines the CHOReOS Dynamic Development Process Model by refining and completing the artefacts/ activities and the relationships among them already sketched into the DoW (under the WP2 description), and conceptualized by the the CHOReOS conceptual model [CHO11b]. The process model is an abstract and simplified description of what will be the actual CHOReOS software development process to be defined at M24. The process model describes the \"strategy\" to be used during the choreography life cycle from design, to development, to maintenance (and hence from static, to runtime, to evolution). The model is made up of activities, common to (almost) every process, but structured in a particular way (i.e., the \"CHOReOS way\"), hence distinguishing the CHOReOS development process from others.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:blknAaTinKkC",
            "Publisher": "Unknown"
        },
        {
            "Title": "The three-step refactoring detector pattern",
            "Publication year": 2019,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/3361149.3361168",
            "Abstract": "Developing a tool that provides support for different refactorings, through a set of refactoring detectors which identify opportunities for source code improvements, is not easy. Our experience in developing such a tool for refactoring object-oriented software revealed the Three-Step Refactoring Detector pattern. The main idea behind the pattern is to develop an extensible hierarchy of refactoring detectors, with respect to a general three-step refactoring detection process. The proposed pattern facilitates the expansion of the hierarchy with new refactoring detectors and enables the reuse of existing refactoring detectors, provided by third party developers. Concerning maintainability, the pattern promotes the development of simple, clean and technology independent refactoring detectors. We have used the pattern for the development of 11 different refactoring detectors in the context of our tool. The pattern has not been \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:b0M2c_1WBrUC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Timely provisioning of mobile services in critical pervasive environments",
            "Publication year": 2005,
            "Publication url": "https://link.springer.com/chapter/10.1007/11575771_54",
            "Abstract": "Timeliness in conventional real-time systems is addressed by employing well-known scheduling techniques that guarantee the execution of a number of tasks within certain deadlines. However, these classical scheduling techniques do not take into account basic features that characterize today\u2019s critical pervasive computing environments.In this paper, we revisit the issue of timeliness in the context of pervasive computing environments. We propose a middleware service that addresses the timely provisioning of services, while taking into account both the mobility of the entities that constitute pervasive computing environments and the existence of multiple alternative entities, providing semantically compatible services. Specifically, we model the overall behavior of mobile entities in terms of the entities\u2019 lifetime. The lifetime of an entity is the duration for which the entity is present and available to \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:3fE2CSJIrl8C",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "A UML-based framework for assessing the reliability of software systems",
            "Publication year": 2001,
            "Publication url": "https://www.cse.uoi.gr/~zarras/papers/C8.pdf",
            "Abstract": "Software reliability can be defined as the probability that a software system successfully performs its designed functions for the duration of a specific mission profile. Modeling and assessing reliability is not a new challenge. As a matter of fact, there exists a variety of techniques for calculating reliability, which are, typically, supported by an underlying modeling formalism like reliability block diagrams, fault trees, reliability graphs, Markov chains, petri nets.Nowadays, however, UML, has emerged as the software industry\u2019s dominant modeling language. Given this fact, in this paper we elaborate on the contribution of UML in modeling quality aspects of software, and in particular aspects that characterize software reliability. In consequence, we propose possible extensions of the UML meta-model. Finally, we investigate how to use a UML model to systematically generate models that serve as input to traditional techniques for assessing reliability. Hence, the main artifact of this paper is a UML-based framework that can be coupled with existing tools, implementing traditional techniques for assessing the reliability of software systems.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:RGFaLdJalmkC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Hiding Design-Decisions in Service-Oriented Software via Service Abstraction Recovery",
            "Publication year": 2010,
            "Publication url": "https://hal.inria.fr/inria-00491349/",
            "Abstract": "In this paper, we propose an approach for the recovery of service abstractions out of sets of available services that play the role of alternative design-decisions, which can be used in a service-oriented application. A service abstraction provides a uniform interface that hides dierences in the interfaces of alternative services and consequently allows reducing the coupling between the application and the services. To this end, we formally define the notion of service abstraction and propose a hierarchical clustering algorithm that incrementally recovers a hierarchy of service abstractions out of a given set of alternative design-decisions/services. Finally, we evaluate the proposed algorithm with real-world sets of services and report on our findings.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:Wp0gIr-vW9MC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Service substitution revisited",
            "Publication year": 2009,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/5431734/",
            "Abstract": "In this paper, we propose a framework that reduces the complexity of service substitution. The framework is based on two substitution relations and corresponding theorems. The proposed relations and theorems allow organizing available services into groups. Then, the complexity of retrieving candidate substitute services for the target service and generating corresponding adapters scales up with the number of available groups, instead of scaling up with the number of available services.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:WF5omc3nYNoC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Developing mobile commerce applications",
            "Publication year": 2008,
            "Publication url": "https://www.igi-global.com/article/developing-mobile-commerce-applications/3506",
            "Abstract": "In this article, we deal with context-aware query processing in ad-hoc peer-to-peer networks. Each peer in such an environment has a database over which users execute queries. This database involves (a) relations which are locally stored and (b) virtual relations, all the tuples of which are collected from peers that are present in the network at the time when a query is posed. The objective of our work is to perform query processing in such an environment and, to this end, we start with a formal definition of the system model. Next, we formally define SQLP, an extension of SQL that covers the termination of queries, the failure of individual peers and the semantic characteristics of the peers of such a network. Moreover, we present a query execution algorithm as well as the formal definition of all the operators that take place in a query execution plan.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:D03iK_w7-QYC",
            "Publisher": "IGI Global"
        },
        {
            "Title": "Online Upgrade of Object-Oriented Middleware.",
            "Publication year": 2004,
            "Publication url": "https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.97.3843&rep=rep1&type=pdf",
            "Abstract": "A system that relies on object-oriented middleware comprises computational objects that are specific to the system\u2019s purpose and middleware objects used for the transparent integration of the former. The efficient maintenance of such a system involves the dynamic upgrade of the aforementioned entities. So far, there have been various approaches dealing with the online upgrade of computational objects. This paper examines the second part of the problem: the online upgrade of middleware. Starting from the identification of requirements for the consistent upgrade of middleware, we result in the design and experimental evaluation of an architectural style for CORBA-based upgradeable middleware.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:Zph67rFs4hoC",
            "Publisher": "Unknown"
        },
        {
            "Title": "An architectural style for the development of choreographies in the future internet",
            "Publication year": 2014,
            "Publication url": "http://www.cs.uoi.gr/~zarras/papers/J13.pdf",
            "Abstract": "Accounting for the challenges posed by the Future Internet (FI), we revisit the traditional definitions of component, connector and coordination protocol, and propose the CHOReOS Architectural Style (CAS) for the development of choreographies in the FI. Components enable leveraging the diversity of services that integrate in the FI as well as the ultra large service base envisioned for the FI. Connectors bring together the highly heterogeneous interaction paradigms that are now used in today\u2019s increasingly complex distributed systems and further support interoperability across heterogeneous paradigms. Coordination protocols foster choreography-based coordination for the sake of scalability, while preventing service interactions that would violate a specified choreography. A key aspect of CAS is to introduce novel abstractions for all its elements, which enable leveraging the wide diversity of the FI, in all its dimensions of scale, heterogeneity and mobility.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:BqipwSGYUEgC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Fine-grained metrics of cohesion lack for service interfaces",
            "Publication year": 2011,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/6009441/",
            "Abstract": "A design issue that often appears in real-world services is that their interfaces are not cohesive, i.e., they consist of many and possibly unrelated operations. This issue may complicate the comprehension of the services functionalities and the maintenance of the applications that use them. Currently, the state of the art on case studies that focus on the evaluation of the cohesion of services offered by major service providers is limited, while research efforts on corresponding cohesion metrics are at a quite early stage. In particular, there exist coarse-grained metrics of cohesion lack, which consider that the operations of a service interface are related if the types of certain of their input/output data exactly match. The problem in this approach is that operations which operate on data characterized by similar, but not exactly matching, types are treated as being totally unrelated. Consequently, the aforementioned metrics may \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:0EnyYjriUFMC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Assessing software reliability at the architectural level",
            "Publication year": 2000,
            "Publication url": "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.41.205&rep=rep1&type=pdf",
            "Abstract": "Modeling software architectures has been proved to be bene cial for facilitating the interaction among di erent stake-holders involved in the software development process, separating design concerns, promoting software reuse and evolution. However, it is still not clear whether software architecture description is compulsory for analyzing qualities like performance and reliability. Trying to clear out the previous question, this paper justi es the necessity of software architectural modeling towards assessing software reliability.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:eQOLeE2rZwMC",
            "Publisher": "Unknown"
        },
        {
            "Title": "The Strategy Configuration Problem and How to Solve It",
            "Publication year": 2021,
            "Publication url": "https://www.cs.uoi.gr/~zarras/papers/C42.pdf",
            "Abstract": "The Strategy pattern allows the developer to implement a family of algorithms that can be used interchangeably and vary independently from the objects that use them. To achieve this, the algorithms are implemented as an hierarchy of respective strategy classes that realize the same interface. One particular issue that is not precisely specified in the pattern is how to configure objects with the algorithms that they need to use. This paper introduces recurring solutions to the problem. These solutions appeared in different projects delivered in the context of Software Engineering, a compulsory course of the Department of Computer Science and Engineering of the University of Ioannina. The reported solutions are of two kinds, those that facilitate the constant configuration of objects with algorithms that do not change during the lifetime of the objects, and those that enable the adaptable configuration of objects with algorithms that can be dynamically reconfigured. The solutions that adhere to the intent of Strategy are reported as patterns, while the solutions that deviate from it are reported as anti-patterns.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:u9iWguZQMMsC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Query management over ad-hoc communities of web services",
            "Publication year": 2005,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/1506419/",
            "Abstract": "In this paper, we present CONSERV - a middleware infrastructure for the development of virtual databases in pervasive computing environments. CONSERV provides an SQL front-end for posing and processing queries on information provided by ad-hoc communities of Web services hosted by peers that arbitrarily join and leave the system. The cornerstone of the proposed infrastructure is the fact that we replace the traditional treatment of databases as persistent collections of records by the assumption that a database relation is a collection of records dynamically compiled from such ad-hoc sets of peers. Each peer offers data to the relations through a workflow of Web services. Another aspect of our approach is that we confine query processing over specific sets of peers that we call communities. Communities are defined based on the current context of the peer initiating each query. Since our infrastructure \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:YOwf2qJgpHMC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Software architecture and dependability",
            "Publication year": 2003,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-540-39800-4_11",
            "Abstract": "Dependable systems are characterized by a number of attributes including: reliability, availability, safety and security. For some attributes (namely for reliability, availability, safety), there exist probability-based theoretic foundations, enabling the application of dependability analysis techniques. The goal of dependability analysis is to forecast the values of dependability attributes, based on certain properties (e.g. failure rate, MTBF, etc.) that characterize the system\u2019s constituent elements.Nowadays, architects, designers and developers build systems based on an architecture-driven approach. They specify the system\u2019s software architecture using Architecture Description Languages or other standard modeling notations like UML. Given the previous, we examine what we need to specify at the architectural level to enable the automated generation of models for dependability analysis. In this paper, we \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:LkGwnXOMwfcC",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Extraction of Embedded Queries via Static Analysis of Host Code",
            "Publication year": 2017,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-59536-8_32",
            "Abstract": "Correctly identifying the embedded queries within the source code of an information system is a significant aid to developers and administrators, as it can facilitate the visualization of a map of the information system, the identification of areas affected by schema evolution, code migration, and the planning of the joint maintenance of code and data. In this paper, we provide a solution to the problem of identifying the location and semantics of embedded queries with a generic, language-independent method that identifies the embedded queries of a data-intensive ecosystem, regardless of the programming style and the host language, and represents them in a universal, also language-independent manner that facilitates the aforementioned maintenance, evolution and migration tasks with minimal user effort and significant effectiveness.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:zA6iFVUQeVQC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Engineering reconfigurable distributed software systems: Issues arising for pervasive computing",
            "Publication year": 2006,
            "Publication url": "https://link.springer.com/chapter/10.1007/11916246_19",
            "Abstract": "This chapter establishes a common base for discussing reconfigurability in distributed software systems in general and in pervasive systems in particular, by introducing a generic reconfiguration cycle. Following this cycle, we discuss in detail three former efforts on reconfigurable pervasive systems, and draw conclusions about the capacity of existing approaches to deal with open, dynamic, ad hoc environments. We, then, outline our approach towards uncontrolled reconfiguration targeting environments in which no centralized coordination or prior awareness between services being composed is assumed. Our solution supports awareness of service semantics and related service discovery, configuration change detection and state transfer, interface-aware dynamic adaptation of service orchestrations and conversation-aware checkpointing and recovery.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:kNdYIx-mwKoC",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Do People Use Naming Conventions in SQL Programming?",
            "Publication year": 2020,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-030-38919-2_35",
            "Abstract": "In this paper, we investigate the usage of naming conventions in SQL programming. To this end, we define a reference style, consisting of naming conventions that have been proposed in the literature. Then, we perform an empirical study that involves the database schemas of 21 open source projects. In our study, we evaluate the adherence of the names that are used in the schemas to the reference style. Moreover, we study how the adherence of the names to the reference style evolves, during the lifetime of the schemas. Our study reveals that many conventions are followed in all schemas. The adherence to these conventions is typically stable, during the lifetime of the schemas. However, there are also conventions that are partially followed, or even not followed. Over time, the adherence of the schemas to these conventions may improve, decay or remain stable.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:CHSYGLWDkRkC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "How is life for a table in an evolving relational schema? Birth, death and everything in between",
            "Publication year": 2015,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-25264-3_34",
            "Abstract": "In this paper, we study the version history of eight databases that are part of larger open source projects, and report on our observations on how evolution-related properties, like the possibility of deletion, or the amount of updates that a table undergoes, are related to observable table properties like the number of attributes or the time of birth of a table. Our findings indicate that (i) most tables live quiet lives; (ii) few top-changers adhere to a profile of long duration, early birth, medium schema size at birth; (iii) tables with large schemata or long duration are quite unlikely to be removed, and, (iv) early periods of the database life demonstrate a higher level of evolutionary activity compared to later ones.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:NaGl4SEjCO4C",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Fitness workout for fat interfaces: Be slim, clean, and flexible",
            "Publication year": 2015,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/7332507/",
            "Abstract": "A class that provides a fat interface violates the interface segregation principle, which states that the clients of the class should not be coupled with methods that they do not need. Coping with this problem involves extracting interfaces that satisfy the needs of the clients. In this paper, we envision an interface extraction method that serves a combination of four principles: (1) fitness, as the extracted interfaces have to fit the needs of the clients, (2) clarity, as the interfaces should not be cluttered with duplicated methods declarations due to the clients' similar needs, (3) flexibility, as it should be easy to maintain the extracted interfaces to cope with client changes, without affecting parts of the software that are not concerned by the changes, and (4) practicality, as the interface extraction should account for practical issues like the number of extracted interfaces, domain/developer specific constraints on what to include in the \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:RYcK_YlVTxYC",
            "Publisher": "IEEE"
        },
        {
            "Title": "CHOReOS State of the Art, Baseline, and Beyond (D1. 1)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00662510/",
            "Abstract": "The D1.1 deliverable clarifies baseline, progress, and state of the art that CHOReOS will address. For each of the first four CHOReOS work packages, WP1 to WP4, this deliverable gives a precise definition of the state of the art, an indication of the envisaged progress beyond the state of the art by CHOReOS and the baseline for its research.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:JV2RwH3_ST0C",
            "Publisher": "Unknown"
        },
        {
            "Title": "Cross-layer routing for peer database querying over mobile ad hoc networks",
            "Publication year": 2012,
            "Publication url": "https://www.sciencedirect.com/science/article/pii/S1389128611003707",
            "Abstract": "The widespread of mobile ad hoc networking calls for a careful design of network functions in order to meet the application requirements and economize on the limited resources. In this paper we address the problem of distributing query messages among peers in mobile ad hoc networks. We assume that peers are organized in classes. Each peer possesses a local database and can answer queries posed by other peers. Each peer can also pose queries to all the peers belonging to a certain class or classes. Contrary to traditional p2p lookup queries, we are interested in collecting answers from as many peers as possible. We propose a query routing protocol, called CL-QF, which is based on a novel cross-layer design. The purpose of this design is to incorporate application layer specifics (e.g., class information) into the network layer in order to reduce transmissions therefore economize on resources. CL-QF \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:mVmsd5A6BfQC",
            "Publisher": "Elsevier"
        },
        {
            "Title": "Modelling and analysing reliable service-oriented processes",
            "Publication year": 2008,
            "Publication url": "https://www.inderscienceonline.com/doi/abs/10.1504/IJBPIM.2008.023216",
            "Abstract": "This paper introduces principled methods for the reliability analysis of business processes that rely on web services. The input to the problem is the BPEL specification of a business process and the output is the prediction of the process's reliability. The first step to this end involves a method for the translation of the BPEL specification to its corresponding UML model. The second step of the reliability analysis involves a principled way for the annotation of the UML model with the necessary extensions for the specification of reliability properties that characterise the behaviour of the elements that constitute the process. The third step of the analysis comprises the systematic mapping of the extended UML model to block diagrams and Markov models which are subsequently used to compute the reliability of the process.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:4JMBOYKVnBMC",
            "Publisher": "Inderscience Publishers"
        },
        {
            "Title": "Survival in schema evolution: putting the lives of survivor and dead tables in counterpoint",
            "Publication year": 2017,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-59536-8_21",
            "Abstract": "How can we plan development over an evolving schema? In this paper, we study the history of the schema of eight open source software projects that include relational databases and extract patterns related to the survival or death of their tables. Our findings are mostly summarized by a pattern, which we call \u201celectrolysis pattern\u201d due to its diagrammatic representation, stating that dead and survivor tables live quite different lives: tables typically die shortly after birth, with short durations and mostly no updates, whereas survivors mostly live quiet lives with few updates \u2013 except for a small group of tables with high update ratios that are characterized by high durations and survival. Based on our findings, we recommend that development over newborn tables should be restrained, and wherever possible, encapsulated by views to buffer both infant mortality and high update rate of hyperactive tables. Once a \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:u_35RYKgDlwC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Dynamic Maintenance of Service Orchestrations",
            "Publication year": 2011,
            "Publication url": "https://www.igi-global.com/chapter/service-intelligence-service-science/47356",
            "Abstract": "Service-oriented architectures evolved rapidly as the solution to the latest requirements for loosely-coupled distributed computing. Into this broad context several approaches emerged towards the discovery and the systematic composition/orchestration of services. One of the next challenges in this field is the maintenance of service-oriented architectures towards accomplishing the ultimate goal of constructing eternal service-oriented systems out of loosely-coupled basic engineering elements. The particular problem we deal with in this paper is the dynamic maintenance of service orchestrations in the presence of unavailable services. Specifically, we focus on the dynamic substitution of stateful services that become unavailable during the execution of service orchestrations. As an answer to this problem, we propose the SIROCO middleware platform based on ontology which is further detailed along with an \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:QIV2ME_5wuYC",
            "Publisher": "IGI Global"
        },
        {
            "Title": "Towards a base uml profile for architecture description",
            "Publication year": 2001,
            "Publication url": "https://openaccess.city.ac.uk/id/eprint/2899/1/",
            "Abstract": "This paper discusses a base UML profile for architecture description as supported by existing Architecture Description Languages (ADLs). The profile may be extended so as to enable architecture modeling both as expressed in conventional ADLs and according to existing runtime infrastructures (eg, system based on middleware architectures).",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:W7OEmFMy1HYC",
            "Publisher": "Unknown"
        },
        {
            "Title": "CHOReOS perspective on the Future Internet and initial conceptual model (D1. 2)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00663429/",
            "Abstract": "The D1.2 deliverable outlines the CHOReOS perspective on the Future Internet and its conceptualization. In particular, the deliverable focuses on: - Definition of the Future Internet and related Future Internet of Services and (Smart) Things, as considered within CHOReOS, further stressing the many dimensions underpinning the Ultra-Large Scale of the Future Internet; - Definition of the initial conceptual model of the CHOReOS Service-Oriented Architecture (SOA) for the Future Internet, identifying the impact of the ULS dimensions upon the traditional SOA paradigms and associated infrastructure.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:bEWYMUwI8FkC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Mining abstract XML data-types",
            "Publication year": 2018,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/3267467",
            "Abstract": "Schema integration has been a long-standing challenge for the data-engineering community that has received steady attention over the past three decades. General-purpose integration approaches construct unified schemas that encompass all schema elements. Schema integration has been revisited in the past decade in service-oriented computing since the input/output data-types of service interfaces are heterogeneous XML schemas. However, service integration differs from the traditional integration problem, since it should generalize schemas (mining abstract data-types) instead of unifying all schema elements. To mine well-formed abstract data-types, the fundamental Liskov Substitution Principle (LSP), which generally holds between abstract data-types and their subtypes, should be followed. However, due to the heterogeneity of service data-types, the strict employment of LSP is not usually feasible. On top \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:bFI3QPDXJZMC",
            "Publisher": "ACM"
        },
        {
            "Title": "Model-Driven Renewal of LAN-Based Business Information Systems Towards Web-Based Systems.",
            "Publication year": 2004,
            "Publication url": "https://www.researchgate.net/profile/Apostolos-Zarras/publication/220969937_Model-Driven_Renewal_of_LAN-Based_Business_Information_Systems_Towards_Web-Based_Systems/links/00b7d52137cf6d9651000000/Model-Driven-Renewal-of-LAN-Based-Business-Information-Systems-Towards-Web-Based-Systems.pdf",
            "Abstract": "A problem that we face today with existing LAN-based business information systems (BISs) is making them accessible over the WEB. In this paper, we propose a methodology and adequate tools that automate the renewal of LAN-based BISs into WEB-based ones. The proposed methodology focuses in cases with lack of documentation related to the architecture of the LAN-based BISs. Such cases are very often in practice, given that the availability of middleware and COTS related CASE tools highly tempts passing from the requirements acquisition phase, directly to the BIS implementation phase.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:e5wmG9Sq2KIC",
            "Publisher": "Unknown"
        },
        {
            "Title": "On accessing GSM-enabled mobile sensors",
            "Publication year": 2005,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/1595583/",
            "Abstract": "In this paper, we propose a middleware framework that unifies access to GSM-enabled sensor devices in a global computing environment. Typically, communication with mobile sensors relies on proprietary protocols, involving the exchange of SMS and MMS messages. In the proposed framework, we use XML-based control descriptions that abstractly specify these protocols to generate proxies and corresponding WEB-based (HTML, WAP and WEB services) interfaces that realize them. Thus, we provide access transparency over different kinds of mobile sensors. Besides the overall architecture of the proposed framework, we discuss a particular instance where a GSM-enabled camera with temperature, and motion detection sensors is incorporated into our global computing environment. Finally, we assess the performance of the proposed framework by presenting experimental results.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:M3ejUd6NZC8C",
            "Publisher": "IEEE"
        },
        {
            "Title": "UML-based modelling of software reliability",
            "Publication year": 2001,
            "Publication url": "https://www.researchgate.net/profile/Apostolos-Zarras/publication/242525512_Uml-based_modelling_of_software_reliability/links/540499cc0cf2bba34c1cdcb7/Uml-based-modelling-of-software-reliability.pdf",
            "Abstract": "Reliability is a measure of the continuous delivery of correct service. Modeling aspects of systems that affect sys-tem reliability and assessing its value is typically done using techniques that are based on formalisms like block diagrams, fault trees, reliability graphs, Markov chains, petri nets. However, system architects/designers are not keen on using such formalisms. Todays practice in software system development involves using high level modeling formalisms to describe the overall architecture and design of a system. Those formalisms include architecture description languages, OMT, and recently UML. UML, in particular, has emerged as the software industry's dominant modeling language. Given those facts, this paper proposes a UML profile for modeling and assessing software reliability. More specifically, we propose possible extensions of the standard UML meta-model, enabling to model aspects of systems \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:ULOm3_A8WrAC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Keep calm and wait for the spike! insights on the evolution of Amazon services",
            "Publication year": 2016,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-39696-5_27",
            "Abstract": "Web services are black box dependency magnets. Hence, studying how they evolve is both important and challenging. In this paper, we focus on one of the most successful stories of the service-oriented paradigm in industry, i.e., the Amazon services. We perform a principled empirical study, that detects evolution patterns and regularities, based on Lehman\u2019s laws of software evolution. Our findings indicate that service evolution comes with spikes of change, followed by calm periods where the service is internally enhanced. Although spikes come with unpredictable volume, developers can count in the near certainty of the calm periods following them to allow their absorption. As deletions rarely occur, both the complexity and the exported functionality of a service increase over time (in fact, predictably). Based on the above findings, we provide recommendations that can be used by the developers of Web \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:ldfaerwXgEUC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Systematic Customization of Middleware",
            "Publication year": 2000,
            "Publication url": "https://www.academia.edu/download/46821203/Systematic_Customization_of_Middleware20160627-30802-1qao4f5.pdf",
            "Abstract": "The urgent need to deal with problems that are frequently met in many di erent families of application led to the evolution and standardization of a software layer that lies between the application and the underlying operating system. This layer is widely known as middleware, and provides reusable solutions to problems like heterogeneity, interoperability, security, transactions, fault tolerance etc. Middleware is typically build based on services provided by an infrastructure. Well known examples of such infrastructures are those complying to the Corba standard, Dcom, Ejb etc. Implementing software based on the reusable solutions provided by middleware infrastructures certainly reduces the cost of the overall software development process. Developers are released from implementing communication protocols, security policies, transaction models. Given a middleware infrastructure, all they have to do is combine available middleware services in a way that satis es the requirements of a particular application. Hence, their e ort is now focused on the design of a middleware architecture that satis es the application requirements.This thesis proposes using the software architecture paradigm for the systematic customization of middleware. More speci cally, it proposes using an architecture description language, together with adequate tool support for designing a middleware architecture that meets requirements of an application, integrating this middleware architecture within the application, and maintaining this middleware architecture with respect to changes in the application requirements and the availability of middleware services.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:5nxA0vEk-isC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Quality analysis of dependable systems: A developer oriented approach",
            "Publication year": 2003,
            "Publication url": "https://link.springer.com/chapter/10.1007/3-540-45177-3_9",
            "Abstract": "The quality of dependable systems (DS) is characterized by a number of non-functional properties (e.g., performance, reliability, availability, etc.). Assessing the DS quality against these properties imposes the application of quality analysis and evaluation. Quality analysis consists of checking, analytically solving, or simulating models of the system, which are specified using formalisms like CSP, CCS, Markov-chains, Petri-nets, Queuing-nets, etc. However, developers are usually not keen on using such formalisms for modeling and evaluating DS quality. On the other hand, they are familiar with using architecture description languages and object-oriented notations for building DS models. Based on the previous and to render the use of traditional quality analysis techniques more tractable, this paper proposes an architecture-based environment that facilitates the specification and quality analysis of DS at the \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:hqOjcs7Dif8C",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "A study on the effect of a table\u2019s involvement in foreign keys to its schema evolution",
            "Publication year": 2020,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-030-62522-1_34",
            "Abstract": "In this paper, we study the evolution of tables in a schema with respect to the structure of the foreign keys to which tables are related. We organize a hierarchy of topological complexity for the structure of foreign keys, based on a modeling of schemata as graphs, where tables are classified in increasing order of complexity as: isolated (not involved in foreign keys), source (with outgoing foreign keys only), lookup (with incoming foreign keys only) and internal (with both kinds). Our study reveals that this hierarchy reflects also the update behavior of tables: topologically simple tables are more likely to have a life with few or zero schema updates, whereas, topologically complex tables are more likely to undergo high numbers of updates. Early versions of the database attract the large majority of births of complex tables, as opposed to the simple ones, demonstrating a pattern of reducing the introduction of complex \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:SP6oXDckpogC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "schedule-Aware transactions for Ambient Intelligence environments",
            "Publication year": 2010,
            "Publication url": "https://www.igi-global.com/article/schedule-aware-transactions-ambient-intelligence/47177",
            "Abstract": "In this paper, the authors investigate the concept of designing user-centric transaction protocols toward achieving dependable coordination in AmI environments. As a proof-of-concept, this paper presents a protocol that takes into account the schedules of roaming users, which move from one AmI environment to another, avoiding abnormal termination of transactions when users leave an environment for a short time and return later. The authors compare the proposed schedule-aware protocol against a schedule-agnostic one. Findings show that the use of user-centric information in such situations is quite beneficial.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:mB3voiENLucC",
            "Publisher": "IGI Global"
        },
        {
            "Title": "Context-aware query processing in ad-hoc environments of peers",
            "Publication year": 2009,
            "Publication url": "https://www.igi-global.com/chapter/context-aware-query-processing-hoc/8008",
            "Abstract": "In this article, we deal with context-aware query processing in ad-hoc peer-to-peer networks. Each peer in such an environment has a database over which users execute queries. This database involves (a) relations which are locally stored and (b) virtual relations, all the tuples of which are collected from peers that are present in the network at the time when a query is posed. The objective of our work is to perform query processing in such an environment and, to this end, we start with a formal definition of the system model. Next, we formally define SQLP, an extension of SQL that covers the termination of queries, the failure of individual peers and the semantic characteristics of the peers of such a network. Moreover, we present a query execution algorithm as well as the formal definition of all the operators that take place in a query execution plan.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:4DMP91E08xMC",
            "Publisher": "IGI Global"
        },
        {
            "Title": "Mining service abstractions: NIER track",
            "Publication year": 2011,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/6032558/",
            "Abstract": "Several lines of research rely on the concept of service abstractions to enable the organization, the composition and the adaptation of services. However, what is still missing, is a systematic approach for extracting service abstractions out of the vast amount of services that are available all over the Web. To deal with this issue, we propose an approach for mining service abstractions, based on an agglomerative clustering algorithm. Our experimental findings suggest that the approach is promising and can serve as a basis for future research.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:KlAtU1dfN6UC",
            "Publisher": "IEEE"
        },
        {
            "Title": "User-Centric Transactions for Ambient Intelligence Environments",
            "Publication year": 2008,
            "Publication url": "https://hal.inria.fr/inria-00312742/",
            "Abstract": "In this paper we investigate the concept of designing user-centric transaction protocols towards achieving dependable coordination in AmI environments. As a proof-of-concept, we propose a protocol that takes into account the schedules of roaming users that move from one AmI environment to another, to avoid abnormal terminations of transactions when the users leave an environment for short, only to return later. We compare the proposed schedule-aware protocol against a schedule-agnostic one. Our findings show that the use of user-centric information in such situations is quite beneficial.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:IWHjjKOFINEC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Cohesion-driven decomposition of service interfaces without access to source code",
            "Publication year": 2014,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/6763104/",
            "Abstract": "Software cohesion concerns the degree to which the elements of a module belong together. Cohesive software is easier to understand, test and maintain. In the context of service-oriented development, cohesion refers to the degree to which the operations of a service interface belong together. In the state of the art, software cohesion is improved based on refactoring methods that rely on information, extracted from the software implementation. This is a main limitation towards using these methods in the case of web services: web services do not expose their implementation; instead all that they export is the web service interface specification. To deal with this problem, we propose an approach that enables the cohesion-driven decomposition of service interfaces, without information on how the services are implemented. Our approach progressively decomposes a given service interface into more cohesive interfaces \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:r0BpntZqJG4C",
            "Publisher": "IEEE"
        },
        {
            "Title": "Service selection for happy users: making user-intuitive quality abstractions",
            "Publication year": 2012,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/2393596.2393632",
            "Abstract": "The state of the art service search engines allow the users to pick the services they need, based on the quality properties, offered by these services. To this end, the users should interact with the search engines based on the quality models that are imposed by the engines. This is a significant restriction towards making the service-oriented paradigm attractive to the general public. In this paper, we propose an approach that allows a user to specify his perception of quality in terms of a simple, user-defined quality model. The proposed approach automatically maps the user-defined quality model to the search engine's quality model. This mapping forms the basis for ordering, grouping and, in general manipulating, the results of the user's service discovery requests.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:aqlVkmm33-oC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Revisiting java bytecode compression for embedded and mobile computing environments",
            "Publication year": 2007,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/4227829/",
            "Abstract": "Pattern-based Java bytecode compression techniques rely on the identification of identical instruction sequences that occur more than once. Each occurrence of such a sequence is substituted by a single instruction. The sequence defines a pattern that is used for extending the standard bytecode instruction set with the instruction that substitutes the pattern occurrences in the original bytecode. Alternatively, the pattern may be stored in a dictionary that serves for the bytecode decompression. In this case, the instruction that substitutes the pattern in the original bytecode serves as an index to the dictionary. In this paper, we investigate a bytecode compression technique that considers a more general case of patterns. Specifically, we employ the use of an advanced pattern discovery technique that allows locating patterns of an arbitrary length, which may contain a variable number of wildcards in place of certain \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:Se3iqnhoufwC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Automating the performance and reliability analysis of enterprise information systems",
            "Publication year": 2001,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/989827/",
            "Abstract": "Good quality models for the analysis of complex enterprise information systems (EIS) are hard to build and require lots of experience and effort, which are not always available. A possible solution to deal with the previous issue is to build automated procedures for quality model generation. Such procedures will encapsulate previous existing knowledge on quality modeling and their use will reduce the cost of developing quality models. The authors concentrate on the performance and reliability of EIS and investigate the automatic generation of quality models from EIS architectural descriptions comprising additional information related to the aspects that affect the quality of the EIS.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:UebtZRa9Y70C",
            "Publisher": "IEEE"
        },
        {
            "Title": "Schema evolution survival guide for tables: Avoid rigid childhood and you\u2019re en route to a quiet life",
            "Publication year": 2017,
            "Publication url": "https://link.springer.com/article/10.1007/s13740-017-0083-x",
            "Abstract": "In this paper, we study the factors that relate to the survival of a table in the context of schema evolution in open-source software. We study the history of the schema of eight open-source software projects that include relational databases and extract patterns related to the survival or death of their tables. Our study shows that the probability of a table with a wide schema (i.e., a large number of attributes) being removed is systematically lower than average. Activity and duration are related to survival too. Rigid tables, without any change to their schema, are more likely to be removed than tables that sustain changes. Durations of dead and survival tables demonstrate a mirror image: dead tables\u2019 durations are mostly short, whereas survivor tables gravitate toward higher durations. Our findings are mostly summarized by a pattern, which we call electrolysis pattern, due to its diagrammatic representation, stating \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:cFHS6HbyZ2cC",
            "Publisher": "Springer Berlin Heidelberg"
        },
        {
            "Title": "The role of software architecture in constraining adaptation in component-based middleware platforms",
            "Publication year": 2000,
            "Publication url": "https://link.springer.com/chapter/10.1007/3-540-45559-0_9",
            "Abstract": "Future middleware platforms will need to be more configurable in order to meet the demands of a wide variety of application domains. Furthermore, we believe that such platforms will also need to be reconfigurable, for example to enable systems to adapt to changes in the underlying systems infrastructure. A number of technologies are emerging to support this level of configurability and re-configurability, most notably middleware platforms based on the concepts of open implementation and reflection. One problem with this general approach is that widespread changes can often be made to the middleware platform, potentially jeopardizing the integrity of the overall system. This paper discusses the role of software architecture in maintaining the overall integrity of the system in such an environment. More specifically, the paper discusses extensions to the Aster framework to support the re-configuration of a \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:u-x6o8ySG0sC",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Initial Architectural Style for CHOReOS Choreographies (D1. 3)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00662483/",
            "Abstract": "While the development of CHOReOS systems build on well-known paradigms associated with service-oriented architectures (e.g., services, service bus and service choreography), the supporting architectural style re- quires accounting for the challenges posed by the future Internet, i.e., ultra large scale, high heterogeneity, increased mobility, and awareness & adaptability. This deliverable then revisits the traditional definitions of service-oriented component (i.e., service), connector (interaction protocol and related service bus for interop- erability) and configuration (system-wide architecture composing services according to orchestration or more general choreography patterns) to meet the FI challenges. Specifically, CHOReOS components enable lever- aging the diversity of Web-based services that integrate in the FI (i.e., WS\u2217 and RESTful web-based services, and from business to thing-based services) as well as the ultra large service base envisioned for the FI. As for CHOReOS connectors, they bring together the highly heterogeneous interaction paradigms that are now used in today's increasingly complex distributed systems and further support interoperability across heterogeneous paradigms. Finally, CHOReOS coordination protocols foster choreography-based coordination for the sake of scalability, while preventing undesired behavior (i.e., undesired service interactions that would violate the specified choreography). A key aspect of the proposed CHOReOS architectural style is to introduce novel ab- stractions for all its elements, which enable leveraging the wide diversity of the FI, in all the dimensions of scale, heterogeneity and mobility \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:M3NEmzRMIkIC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Component based programming of distributed apilications",
            "Publication year": 2000,
            "Publication url": "http://olympias.lib.uoi.gr/jspui/handle/123456789/10697",
            "Abstract": "Repository of UOI \"Olympias\": Component based programming of distributed apilications Skip \nnavigation Home Browse Communities & Collections Browse Items by: Issue Date Author Title \nSubject Item Type Advanced Search Help About DSpace Sign on to: My DSpace Receive email \nupdates Edit Profile Saved Searches Favorites Repository of UOI \"Olympias\" 1.Repository of OAI \n2.\u0391\u03a0\u039f\u0398\u0395\u03a4\u0397\u03a1\u0399\u039f \"\u039f\u039b\u03a5\u039c\u03a0\u0399\u0391\u03a3\" 3.\u03a3\u03c7\u03bf\u03bb\u03ae \u0398\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03ce\u03bd 4.\u03a4\u03bc\u03ae\u03bc\u03b1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \n\u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 5.\u0386\u03c1\u03b8\u03c1\u03b1 \u03c3\u03b5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03bf\u03b4\u03b9\u03ba\u03ac ( \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ac) \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac English \nPlease use this identifier to cite or link to this item: \nhttps://olympias.lib.uoi.gr/jspui/handle/123456789/10697 Institution and School/Department of \nsubmitter: \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b9\u03bf \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd. \u03a3\u03c7\u03bf\u03bb\u03ae \u0398\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03ce\u03bd. \u03a4\u03bc\u03ae\u03bc\u03b1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \n\u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 URI: https://olympias.lib.uoi.gr/jspui/handle/123456789/10697 \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:M05iB0D1s5AC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Schema evolution for databases and data warehouses",
            "Publication year": 2015,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-39243-1_1",
            "Abstract": "Like all software systems, databases are subject to evolution as time passes. The impact of this evolution is tremendous as every change to the schema of a database affects the syntactic correctness and the semantic validity of all the surrounding applications and de facto necessitates their maintenance in order to remove errors from their source code. This survey provides a walk-through on different approaches to the problem of handling database and data warehouse schema evolution. The areas covered include (a) published case studies with statistical information on database evolution, (b) techniques for managing schema and view evolution, (c) techniques pertaining to the area of data warehouses, and, (d) prospects for future research.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:pqnbT2bcN3wC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Systematic aid for developing middleware architectures",
            "Publication year": 2002,
            "Publication url": "https://dl.acm.org/doi/fullHtml/10.1145/508448.508474",
            "Abstract": "This development environment enables the specification, automated composition, and quality analysis of flexible, configurable middleware architectures, notably in distributed systems.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:UeHWp8X0CEIC",
            "Publisher": "ACM"
        },
        {
            "Title": "Accelerating Web service workflow execution via intelligent allocation of services to servers",
            "Publication year": 2010,
            "Publication url": "https://www.igi-global.com/article/journal-database-management-jdm/47420",
            "Abstract": "The appropriate deployment of web service operations at the service provider site plays a critical role in the efficient provision of services to clients. In this paper, the authors assume that a service provider has several servers over which web service operations can be deployed. Given a workflow of web services and the topology of the servers, the most efficient mapping of operations to servers must then be discovered. Efficiency is measured in terms of two cost functions that concern the execution time of the workflow and the fairness of the load distribution among the servers. The authors study different topologies for the workflow structure and the server connectivity and propose a suite of greedy algorithms for each combination.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:dhFuZR0502QC",
            "Publisher": "IGI Global"
        },
        {
            "Title": "And the Tool Created a GUI That was Impure and Without Form: Anti-Patterns in Automatically Generated GUIs",
            "Publication year": 2018,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/3282308.3282333",
            "Abstract": "A basic prerequisite for any daily development task is to understand the source code that we are working with. To this end, the source code should be clean. Usually, it is up to us, the developers, to keep the source code clean. However, often there are parts of the code that are automatically generated. A typical such case are Graphical User Interfaces (GUIs) created via a GUI builder, ie, a tool that allows the developer to design the GUI by combining graphical control elements, offered in a palette. In this paper, we investigate the quality of the code that is generated by GUI builders. To assist tool-smiths in developing better GUI builders, we report anti-patterns concerning naming, documentation, design and implementation issues, observed in a study that involves four popular GUI builders for Java. The reported anti-patterns can further assist GUI developers/designers in selecting appropriate tools.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:f2IySw72cVMC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Common mistakes when using the command pattern and how to avoid them",
            "Publication year": 2020,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/3424771.3424773",
            "Abstract": "Command, is a behavioral pattern from the Gang of Four catalog that allows us to structure an application with respect to primitive actions that can be easily managed and executed. The main idea is to decouple the objects that invoke actions from the objects that know how to perform them, by encapsulating everything that is needed for executing the actions in corresponding command objects. The application can comprise different classes of command objects that realize different actions. The different classes of command objects implement the same interface. Therefore, command objects can be passed as parameters to other objects that use them to execute the respective actions, without knowing how this is actually done.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:dshw04ExmUIC",
            "Publisher": "Unknown"
        },
        {
            "Title": "CoWSAMI: Interface-aware context gathering in ambient intelligence environments",
            "Publication year": 2008,
            "Publication url": "https://www.sciencedirect.com/science/article/pii/S1574119207000740",
            "Abstract": "In this paper we present CoWSAMI, a middleware infrastructure that enables context awareness in open ambient intelligence environments, consisting of mobile users and context sources that become dynamically available as the users move from one location to another. A central requirement in such dynamic scenarios is to be able to integrate new context sources and users at run-time. CoWSAMI exploits a novel approach towards this goal. The proposed approach is based on utilizing Web services as interfaces to context sources and dynamically updatable relational views for storing, aggregating and interpreting context. Context rules are employed to provide mappings that specify how to populate context relations, with respect to the different context sources that become dynamically available. An underlying context sources discovery mechanism is utilized to maintain context information up to date as context \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:qjMakFHDy7sC",
            "Publisher": "Elsevier"
        },
        {
            "Title": "Mobile web services for context-aware pervasive environments",
            "Publication year": 2005,
            "Publication url": "https://www.researchgate.net/profile/Valerie-Issarny/publication/265022761_Mobile_Web_Services_for_Context-Aware_Pervasive_Environments/links/544e68010cf2bca5ce90b268/Mobile-Web-Services-for-Context-Aware-Pervasive-Environments.pdf",
            "Abstract": "In this paper we propose CoWSAMI, a service-oriented middleware that aims at supporting context-awareness in pervasive computing environments. To this end, we rely on the standard Web services architectural style to handle the architectural heterogeneity of available context sources. CoWSAMI balances the trend between the resource limitations of available context sources and the resource requirements introduced by the aforementioned standard, by employing WSAMI, a lightweight middleware infrastructure for the development of mobile Web services. CoWSAMI provides a dynamic and highly scalable service discovery mechanism that deals with the increased behavioral mobility of available context sources. CoWSAMI further handles the behavioral heterogeneity of available context sources through a mechanism that gathers contextual information while adapting its proper behavior to the interfaces of context sources. Finally, CoWSAMI allows querying for contextual information with respect to the aforementioned organization, though a classical SQL-based interface.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:4TOpqqG69KYC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Growing up with stability: how open-source relational databases evolve",
            "Publication year": 2015,
            "Publication url": "https://www.sciencedirect.com/science/article/pii/S0306437915000691",
            "Abstract": "Like all software systems, databases are subject to evolution as time passes. The impact of this evolution can be vast as a change to the schema of a database can affect the syntactic correctness and the semantic validity of all the surrounding applications. In this paper, we have performed a thorough, large-scale study on the evolution of databases that are part of larger open source projects, publicly available through open source repositories. Lehman\u05f3s laws of software evolution, a well-established set of observations on how the typical software systems evolve (matured during the last forty years), has served as our guide towards providing insights on the mechanisms that govern schema evolution. Much like software systems, we found that schemata expand over time, under a stabilization mechanism that constraints uncontrolled expansion with perfective maintenance. At the same time, unlike typical software \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:O3NaXMp0MMsC",
            "Publisher": "Pergamon"
        },
        {
            "Title": "Modelling and analysing reliable service oriented processes",
            "Publication year": 2008,
            "Publication url": "http://olympias.lib.uoi.gr/jspui/handle/123456789/10997",
            "Abstract": "Repository of UOI \"Olympias\": Modelling and analysing reliable service oriented processes Skip \nnavigation Home Browse Communities & Collections Browse Items by: Issue Date Author Title \nSubject Item Type Advanced Search Help About DSpace Sign on to: My DSpace Receive email \nupdates Edit Profile Saved Searches Favorites Repository of UOI \"Olympias\" 1.Repository of OAI \n2.\u0391\u03a0\u039f\u0398\u0395\u03a4\u0397\u03a1\u0399\u039f \"\u039f\u039b\u03a5\u039c\u03a0\u0399\u0391\u03a3\" 3.\u03a3\u03c7\u03bf\u03bb\u03ae \u0398\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03ce\u03bd 4.\u03a4\u03bc\u03ae\u03bc\u03b1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \n\u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 5.\u0386\u03c1\u03b8\u03c1\u03b1 \u03c3\u03b5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03bf\u03b4\u03b9\u03ba\u03ac ( \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ac) \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac English \nPlease use this identifier to cite or link to this item: \nhttps://olympias.lib.uoi.gr/jspui/handle/123456789/10997 Institution and School/Department of \nsubmitter: \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b9\u03bf \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd. \u03a3\u03c7\u03bf\u03bb\u03ae \u0398\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03ce\u03bd. \u03a4\u03bc\u03ae\u03bc\u03b1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \n\u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 Keywords: composite web services,BPEL,reliability \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:2P1L_qKh6hAC",
            "Publisher": "Unknown"
        },
        {
            "Title": "A Middleware Service for Managing Time and Quality Dependent Context.",
            "Publication year": 2004,
            "Publication url": "http://www.cs.uoi.gr/~zarras/papers/C13.pdf",
            "Abstract": "Nowadays, wearable devices, such as mobile phones, PDAs, etc. gain widespread popularity for communication and data exchange. Consequently, several approaches investigate the problem of their interconnection and communication, under a common middleware infrastructure enabling the development of mobile applications, which form a ubiquitous mobile computing environment. In such an environment, changes are very often and the applications need to be highly adaptive. In other words, the applications must be context-aware. The context of an application may be anything that influences its execution. In this work, we propose a middleware service, which enables reasoning about changes in the context of an application. It supports the adaptation of the services used and the application itself, according to context changes. The proposed service relies on a method for modeling context, which is based on temporal logic, which allows reasoning about time dependencies between context changes and adaptation actions. The reasoning procedure takes into quality properties (eg inaccuracy, unreliability, insecurity), characterizing the trustworthiness of the sources, which generate information about context changes.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:hC7cP41nSMkC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Recommending Trips in the Archipelago of Refactorings",
            "Publication year": 2020,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-030-38919-2_38",
            "Abstract": "The essence of refactoring is to improve source code quality, in a principled, behavior preserving, one step at the time, process. To this end, the developer has to figure out the refactoring steps, while working on a specific source code fragment. To facilitate this task, the documentation that explains each primitive refactoring typically provides guidelines and tips on how to combine it with further refactorings. However, the developer has to cope with many refactorings and lots of guidelines.To deal with this problem, we propose a graph-based model that formally specifies refactoring guidelines and tips in terms of nodes that correspond to refactorings and edges that denote part-of, instead-of and succession relations. We refer to this model as the Map of the Archipelago of Refactorings and we use it as the premise of the Refactoring Trip Advisor, a refactoring recommendation tool that facilitates the combination of \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:1sJd4Hv_s6UC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Integrated CHOReOS middleware-Enabling large-scale, QoS-aware adaptive choreographies",
            "Publication year": 2013,
            "Publication url": "https://hal.inria.fr/hal-00912882/",
            "Abstract": "This document describes the final implementation and the evaluation of the CHOReOS middleware. Evaluation is achieved both via the use of the middleware on CHOReOS use-cases and via synthetic experiments and simulation. The conclusion was that the implementation of the CHOReOS middleware has achieved a good level of maturity for an open source project and it is ready to be used in real-world, complex choreographies.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:_Qo2XoVZTnwC",
            "Publisher": "Unknown"
        },
        {
            "Title": "HAL Id: inria-00583780",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/inria-00583780/PDF/icse11_2nier-p101-athanasopoulos.pdf",
            "Abstract": "Several lines of research rely on the concept of service abstractions to enable the organization, the composition and the adaptation of services. However, what is still missing, is a systematic approach for extracting service abstractions out of the vast amount of services that are available all over the Web. To deal with this issue, we propose an approach for mining service abstractions, based on an agglomerative clustering algorithm. Our experimental findings suggest that the approach is promising and can serve as a basis for future research.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:P5F9QuxV20EC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Applying model-driven architecture to achieve distribution transparencies",
            "Publication year": 2006,
            "Publication url": "https://www.sciencedirect.com/science/article/pii/S0950584905000856",
            "Abstract": "This paper proposes a principled methodology for the realization of distribution transparencies. The proposed methodology is placed within the general context of Model-Driven Architecture (MDA) development. Specifically, it consists of a UML-based representation for the specification of platform independent models of a system. Moreover, it comprises an automated aspect-oriented method for the refinement of platform independent models into platform specific ones (i.e. models describing the realization of the system's distribution transparency requirements, based on a standard middleware platform like CORBA, J2EE, COM+, etc.). Finally, the proposed methodology includes an aspect-oriented method for the generation of platform specific code from platform specific models.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:_kc_bZDykSQC",
            "Publisher": "Elsevier"
        },
        {
            "Title": "Distributed Objects and Applications (DOA) 2005 International Conference-Mobility-Timely Provisioning of Mobile Services in Critical Pervasive Environments",
            "Publication year": 2005,
            "Publication url": "https://scholar.google.com/scholar?cluster=10592178997610001169&hl=en&oi=scholarr",
            "Abstract": "Unknown",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:R3hNpaxXUhUC",
            "Publisher": "Berlin: Springer-Verlag, 1973-"
        },
        {
            "Title": "Open-source databases: Within, outside, or beyond lehman\u2019s laws of software evolution?",
            "Publication year": 2014,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-07881-6_26",
            "Abstract": "Lehman\u2019s laws of software evolution is a well-established set of observations (matured during the last forty years) on how the typical software systems evolve. However, the applicability of these laws on databases has not been studied so far. To this end, we have performed a thorough, large-scale study on the evolution of databases that are part of larger open source projects, publicly available through open source repositories, and report on the validity of the laws on the grounds of properties like size, growth, and amount of change per version.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:j3f4tGmQtD8C",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "ForeverSOA: Towards the maintenance of service oriented software",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/inria-00628706/",
            "Abstract": "In this position paper, we argue about the need to adapt/refine fundamental object-oriented design principles with respect to the specificities of service- oriented software, to address realistic maintenance scenarios. Moreover, we sketch an approach that relies on a reverse engineering process, which recovers service abstractions out of available services, to enable the adoption of the refined principles in the development of service-oriented software towards improving its maintainability quality attribute.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:_FxGoFyzp5QC",
            "Publisher": "Unknown"
        },
        {
            "Title": "A Framework for Systematic Synthesis of Transactional",
            "Publication year": 2012,
            "Publication url": "https://books.google.com/books?hl=en&lr=&id=eQ_SBwAAQBAJ&oi=fnd&pg=PA257&dq=info:gPSh7il5w8QJ:scholar.google.com&ots=6fzWbYx2SE&sig=Piv4XQatEJP9gTTKNveVFfhLujs",
            "Abstract": "Transactions are contracts that guarantee a consistent, transparent, individual system state transition and their use is widespread in many different kinds of computing systems. Some well known standards (eg CORBA) include the specification of services that provide transactional properties. In this paper, we present a formal method for the systematic synthesis of transactional middleware based on the combination of the aforementioned services. The synthesis of transactional middleware is based on (i) the formal specification of transactional properties and (ii) stub code generation.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:GnPB-g6toBAC",
            "Publisher": "Springer Science & Business Media"
        },
        {
            "Title": "Cross-layer networking for peer databases over wireless ad-hoc communities",
            "Publication year": 2007,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/4289241/",
            "Abstract": "In this paper we address the problem of efficiently distributing query messages among peers in a wireless ad hoc network. We assume that peers are organized in classes. Each peer possesses a local database and can answer queries posed by other peers. Each peer can also pose queries to all the peers belonging to a certain class and/or within a certain range of distance in the network. Contrary to traditional p2p lookup queries, we are interested in collecting answers from as many peers as possible. To efficiently serve this purpose, we take advantage of routing and application layer specifics (e.g., class information, network distance) to avoid flooding and at the same time preserve compatibility with traditional routing and transport mechanisms.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:qxL8FJ1GzNcC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Schema evolution and foreign keys: birth, eviction, change and absence",
            "Publication year": 2017,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-319-69904-2_9",
            "Abstract": "In this paper, we focus on the study of the evolution of foreign keys in the broader context of schema evolution for relational databases. Specifically, we study the schema histories of a six free, open-source databases that contained foreign keys. Our findings concerning the growth of tables verify previous results that schemata grow in the long run in terms of tables. Moreover, we have come to several surprising, new findings in terms of foreign keys. Foreign keys appear to be fairly scarce in the projects that we have studied and they do not necessarily grow in sync with table growth. In fact, we have observed different cultures for the handling of foreign keys, ranging from treating foreign keys as an indispensable part of the schema, in full sync with the growth of tables, to the unexpected extreme of treating foreign keys as an optional add-on that twice resulted in their full removal from the schema of the database.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:4OULZ7Gr8RgC",
            "Publisher": "Springer, Cham"
        },
        {
            "Title": "Quality analysis of dependable information systems",
            "Publication year": 2002,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-1-4757-3573-4_7",
            "Abstract": "Large industrial organizations strongly depend on the use of enterprise information systems for the application of their complex business processes. Typically, an enterprise information system (EIS) consists of a set of autonomous distributed components providing basic services. Business processes can be realized as workflows consisting of: (1) tasks combining basic services provided by EIS components and (2) synchronization dependencies among tasks. EIS users have ever-increasing nonfunctional requirements (e.g. performance, reliability, availability, etc.) on the quality of those systems. To satisfy those requirements, EIS engineers must perform quality analysis and evaluation, which involves analytically solving, or simulating quality models of the system (e.g. Markov chains, Queuing-nets, Petri-nets etc).Good quality models are hard to build and require lots of experience and effort, which are \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:hFOr9nPyWt4C",
            "Publisher": "Springer, Boston, MA"
        },
        {
            "Title": "Configuration systematique de middleware",
            "Publication year": 2000,
            "Publication url": "https://www.theses.fr/2000REN10010",
            "Abstract": "Le traitement de problemes rencontres dans la construction de differentes familles d'applications a donne lieu a la definition et a la standardisation d'une couche logicielle qui se situe entre l'application et le systeme d'exploitation sous-jacent. Cette couche est connue sous le nom de middleware, et fournit des solutions reutilisables aux problemes recurrents dans la construction de logiciels complexes, comme l'heterogeneite, l'interoperabilite, la securite, la tolerance aux fautes ou encore l'execution de transactions. Un middleware est typiquement construit a partir de services fournis par une infrastructure. Des exemples connus de telles infrastructures sont celles conformes au standard corba, dcom ou encore ejb. L'implementation d'un logiciel s' appuyant sur des solutions reutilisables, fournies par les infrastructures middleware, simplifie de maniere evidente le processus de developpement du logiciel. Les developpeurs de logiciels se trouvent affranchis de l'implementation de protocoles de gestion des communications, de la securite ou encore de modeles transactionnels. Etant donnee une infrastructure middleware, le travail du developpeur quant a la mise en uvre d'un systeme d'execution (ou middleware) pour une application donnee est la combinaison de services middleware disponibles de telle sorte que le systeme resultant satisfasse les exigences de l'application. L'effort a fournir porte donc sur la conception d'architectures middleware qui satisfont les exigences particulieres des applications. Notre travail de these a porte sur l'exploitation de la notion d'architecture logicielle pour la construction systematique de middleware, adaptes aux \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:L8Ckcad2t8MC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Dynamic service substitution in service-oriented architectures",
            "Publication year": 2008,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/4578309/",
            "Abstract": "The problem we deal with in this paper is the dynamic substitution of stateful services that become unavailable during the execution of service orchestrations. Previous research efforts focusing on the reconfiguration of conventional distributed systems enable the substitution of system entities with other prefabricated passive entities that serve as a backup. Nevertheless, the problem of service substitution is far more complex. In SOA, we can assume the possible existence of several semantically compatible services capable of performing the same or similar tasks. However, each one of them constantly serves requests and cannot be considered as a passive backup for other services. Therefore, we propose the SIROCO middleware platform, enabling the runtime, semantic-based service substitution. The basic concepts of SIROCO are discussed along with an experimental evaluation of our first prototype. Our findings \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:zYLM7Y9cAGgC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Annual Report on CHOReOS Dissemination-1st year (D9. 3.1)",
            "Publication year": 2011,
            "Publication url": "https://hal.inria.fr/hal-00665523/",
            "Abstract": "This report summarizes achievement of the CHOReOS project in terms of disseminating project's goals and results during the first year. It further provides links to the concrete material that has been disseminated so far, hence enabling the interested reader to get access to the published material to know more about CHOReOS.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:hMod-77fHWUC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Erratum to: Service-oriented middleware for the Future Internet: state of the art and research directions",
            "Publication year": 2011,
            "Publication url": "https://scholar.google.com/scholar?cluster=11655709339794054854&hl=en&oi=scholarr",
            "Abstract": "Unknown",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:HoB7MX3m0LUC",
            "Publisher": "Springer Science and Media"
        },
        {
            "Title": "Model-driven dependability analysis of webservices",
            "Publication year": 2004,
            "Publication url": "https://link.springer.com/chapter/10.1007/978-3-540-30469-2_48",
            "Abstract": "This paper focuses on the development of a principled methodology for the dependability analysis of composite Web services. The first step of the methodology involves a UML representation for the architecture specification of composite Web services. The proposed representation is built upon BPEL and introduces necessary extensions to support the second step of the methodology, which comprises the specification of properties, characterizing the failure behavior of the elements that constitute the composite Web services. The automated mapping of this extended UML model to Block Diagrams and Markov models is introduced as the third step of the methodology. A comparative analysis of the aforementioned dependability analysis techniques in terms of precision and complexity is also performed.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:d1gkVwhDpl0C",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Component-based programming of distributed applications",
            "Publication year": 2000,
            "Publication url": "https://link.springer.com/chapter/10.1007/3-540-46475-1_14",
            "Abstract": "The software architecture research domain arose in the early 90s and seeks solutions for easing the development of large, complex, software systems based on the abstract description of their software architectures. This research field is quite recent and there still does not exist a consensus on what should be the description of a software architecture. However, guidelines are already provided. In particular, it is now accepted that an architecture definition decomposes into three types of elements: component, connector, and configuration, which respectively correspond to a computation unit, an interaction unit and an architecture. It is also admitted that the description of an architecture should rely on a well-defined set of notations, generically referred to as architecture description languages. This document gives an overview of the capabilities offered by development environments based on the architecture \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:Y0pCki6q_DkC",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Adaptation to connectivity loss in pervasive computing environments",
            "Publication year": 2006,
            "Publication url": "https://www.academia.edu/download/30603074/06-10.pdf#page=79",
            "Abstract": "Pervasive computing environments aim at providing users with advanced services, dynamically composed out of networked services. In these open environments, availability of specific networked service instances cannot be guaranteed over time as users move and services leave and join the network accordingly. A major challenge in pervasive environments is thus to maintain services functionalities despite the dynamics of the environment, which induces connectivity loss with service instances. In this paper, we analyse the requirements to make distributed composite services able to face connectivity loss, ie, able to dynamically adapt their configuration according to the networking environment. We then discuss the adaptation of relevant techniques that originate in the fault tolerance domain to the specifics of pervasive computing.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:MXK_kJrjxJIC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Navigating through the Archipelago of Refactorings",
            "Publication year": 2015,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/2786805.2803203",
            "Abstract": "The essence of refactoring is to improve software quality via the systematic combination of primitive refactorings. Yet, there are way too many refactorings. Choosing which refactorings to use, how to combine them and how to integrate them in more complex evolution tasks is really hard. Our vision is to provide the developer with a\" trip advisor\" for the archipelago of refactorings. The core idea of our approach is the map of the archipelago of refactorings, which identies the basic relations that guide the systematic and eective combination of refactorings. Based on the map, the trip advisor makes suggestions that allow the developer to decide how to start, assess the possible alternatives, have a clear picture of what has to be done before, during and after the refactorings and assess the possible implications.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:J_g5lzvAfSwC",
            "Publisher": "Unknown"
        },
        {
            "Title": "How to Test the Extract Method Refactoring",
            "Publication year": 2020,
            "Publication url": "https://dl.acm.org/doi/abs/10.1145/3424771.3424793",
            "Abstract": "Extract Method is probably the most commonly used refactoring. Although it may seem quite simple at a first glance, there are many cases that it can become fairly complex. Local variables and parameters can make this refactoring difficult to implement. The whole procedure can also become quite error-prone. The only way to be sure that we performed the refactoring without introducing bugs is by means of testing. Testing, however, seems to many application developers a very bothersome procedure. To facilitate their work we discuss patterns that customize existing testing techniques to the specificities of the Extract Method refactoring.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:UxriW0iASnsC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Final CHOReOS Architectural Style and its Relation with the CHOReOS Development Process and IDRE",
            "Publication year": 2013,
            "Publication url": "https://hal.inria.fr/hal-00912869/",
            "Abstract": "This is Part b of Deliverable D1.4, which specifies the final CHOReOS architectural style, that is, the types of components, connectors, and configurations that are composed within the Future Internet of services, as enabled by the CHOReOS technologies developed in WP2 to WP4 and integrated in the WP5 IDRE. The definition of the CHOReOS architectural style is especially guided by the objective of meeting the challenges posed by the Future Internet, i.e.: (i) the ultra large base of services and of consumers, (ii) the high heterogeneity of the services that get composed, from the ones offered by tiny things to the ones hosted on powerful cloud computing infrastructures, (iii) the increasing predominance of mobile consumers and services, which take over the original fixed Inter- net, and (iv) the required awareness of, and related adaptation to, the continuous environmental changes. Another critical challenge posed by the Future Internet is that of security, trust and privacy. However, the study of technologies dedicated to enforcing security, privacy and trust is beyond the scope of the CHOReOS project; instead, state of the art technologies and possibly latest results from projects focused on security solutions are built upon for the development of CHOReOS use cases -if and when needed-. The CHOReOS architectural style that is presented in this deliverable refines the definition of the early style introduced in Deliverable D1.3. Key features of the CHOReOS architectural elements are as follows: (1) The CHOReOS service-based components are technology agnostic and allow for the abstraction of the large diversity of Future Internet services, and \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:maZDTaKrznsC",
            "Publisher": "Unknown"
        },
        {
            "Title": "Service-oriented middleware for the future internet: state of the art and research directions",
            "Publication year": 2011,
            "Publication url": "https://link.springer.com/article/10.1007/s13174-011-0021-3",
            "Abstract": "Service-oriented computing is now acknowledged as a central paradigm for Internet computing, supported by tremendous research and technology development over the last 10 years. However, the evolution of the Internet, and in particular, the latest Future Internet vision, challenges the paradigm. Indeed, service-oriented computing has to face the ultra large scale and heterogeneity of the Future Internet, which are orders of magnitude higher than those of today\u2019s service-oriented systems. This article aims at contributing to this objective by identifying the key research directions to be followed in light of the latest state of the art. This article more specifically focuses on research challenges for service-oriented middleware design, therefore, investigating service description, discovery, access, and composition in the Future Internet of services.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:9yKSN-GCB0IC",
            "Publisher": "SpringerOpen"
        },
        {
            "Title": "A comparison framework for middleware infrastructures",
            "Publication year": 2004,
            "Publication url": "http://www.jot.fm/issues/issue_2004_05/article2.pdf",
            "Abstract": "Middleware is a software layer standing between the operating system and the application, enabling the transparent integration of distributed objects.In this paper, we propose a framework that facilitates the comparison of middleware infrastructures. Our approach serves for identifying similarities and differences between middleware infrastructures and revealing their advantages and disadvantages when facing the question of choosing one that satisfies the application\u2019s requirements. Based on the proposed framework, we compare CORBA with J2EE and COM+, three of the most widely used infrastructures in both industry and academia.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:IjCSPb-OGe4C",
            "Publisher": "Unknown"
        },
        {
            "Title": "Service oriented middleware for the future Internet state of the art and research directions",
            "Publication year": 2011,
            "Publication url": "http://olympias.lib.uoi.gr/jspui/handle/123456789/11081",
            "Abstract": "Repository of UOI \"Olympias\": Service oriented middleware for the future Internet state of the \nart and research directions Skip navigation Home Browse Communities & Collections Browse \nItems by: Issue Date Author Title Subject Item Type Advanced Search Help About DSpace Sign \non to: My DSpace Receive email updates Edit Profile Saved Searches Favorites Repository of \nUOI \"Olympias\" 1.Repository of OAI 2.\u0391\u03a0\u039f\u0398\u0395\u03a4\u0397\u03a1\u0399\u039f \"\u039f\u039b\u03a5\u039c\u03a0\u0399\u0391\u03a3\" 3.\u03a3\u03c7\u03bf\u03bb\u03ae \u0398\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03ce\u03bd \n4.\u03a4\u03bc\u03ae\u03bc\u03b1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 5.\u0386\u03c1\u03b8\u03c1\u03b1 \u03c3\u03b5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ac \n\u03c0\u03b5\u03c1\u03b9\u03bf\u03b4\u03b9\u03ba\u03ac ( \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ac) \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac English Please use this identifier to cite or link to this item: \nhttps://olympias.lib.uoi.gr/jspui/handle/123456789/11081 Institution and School/Department of \nsubmitter: \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03ae\u03bc\u03b9\u03bf \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd. \u03a3\u03c7\u03bf\u03bb\u03ae \u0398\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03ce\u03bd. \u03a4\u03bc\u03ae\u03bc\u03b1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03ce\u03bd \n\u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 Keywords: Future Internet,,Service-oriented ,,-: :\u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:35N4QoGY0k4C",
            "Publisher": "Unknown"
        },
        {
            "Title": "An integrated development and runtime environment for the future internet",
            "Publication year": 2012,
            "Publication url": "https://library.oapen.org/bitstream/handle/20.500.12657/28083/10.1007_978-3-642-30241-1.pdf?sequence=2#page=103",
            "Abstract": "The Future Internet environments raise challenging issues for the Service-Oriented Architectures. Due to the scalability and heterogeneity issues new approaches are thought in order to leverage the SOA to support a wider range of services and users. The CHOReOS project is part of the European Community Initiative to sketch technological solutions for the future ultra large systems. In particular, CHOReOS explores the choreography of services paradigm. Within this project, a conceptual architecture combining both the development and runtime environments is realized. This chapter introduces the CHOReOS Integrated Development and Runtime Environment, aka IDRE.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:roLk4NBRz8UC",
            "Publisher": "Springer, Berlin, Heidelberg"
        },
        {
            "Title": "Multi-objective Service Similarity Metrics for More Effective Service Engineering Methods (Short Paper)",
            "Publication year": 2015,
            "Publication url": "https://ieeexplore.ieee.org/abstract/document/7399112/",
            "Abstract": "The usage of single-objective similarity functions in engineering tasks of service-oriented software may reduce their effectiveness, since a single similarity value can be misleading. In particular, a single similarity value cannot be clearly interpreted, since it hides the values of its individual objectives. The state-of-the-art approaches, which use service similarity functions, typically rely on single-objective functions. Going in a complementary direction, we propose the usage of multi-objective functions for calculating service similarity. We formally define such a function and we provide emerging results, which show that the effectiveness of service engineering tasks can be improved by using multi-objective functions.",
            "Abstract entirety": 1,
            "Author pub id": "9nXN6XYAAAAJ:lSLTfruPkqcC",
            "Publisher": "IEEE"
        },
        {
            "Title": "Schema evolution and foreign keys: a study on usage, heartbeat of change and relationship of foreign keys to table activity",
            "Publication year": 2019,
            "Publication url": "https://link.springer.com/article/10.1007/s00607-019-00702-x",
            "Abstract": "In this paper, we study the evolution of foreign keys in the context of schema evolution for relational databases. Specifically, we study the schema histories of a six free, open-source databases that contain foreign keys. Our findings verify previous results that schemata grow in the long run in terms of tables. To our surprise, we discovered that foreign keys appear to be fairly scarce in the projects that we have studied and they do not necessarily grow in sync with table growth. In fact, we have observed different \u201ccultures\u201d for the handling of foreign keys, ranging from treating foreign keys as an indispensable part of the schema, in full sync with the growth of tables, to the unexpected extreme of treating foreign keys as an optional add-on that twice resulted in their full removal from the schema of the database. Apart from the behavior of entire schemata, we have also studied the behavior of individual tables. We \u2026",
            "Abstract entirety": 0,
            "Author pub id": "9nXN6XYAAAAJ:EUQCXRtRnyEC",
            "Publisher": "Springer Vienna"
        }
    ]
}]